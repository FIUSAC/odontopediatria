<?xml version="1.0" encoding="UTF-8" standalone="no"?><templates><template autoinsert="true" context="java" deleted="false" description="BLL - Crear" enabled="true" name="bllc">/*********************************************************************&#13;
 * @author ${nombre}&#13;
 * @since ${date}&#13;
 * @param ${tipo_parametro}_BE&#13;
 * @return Resultado_BE&#13;
 * @throws Exception&#13;
 * @Descripcion ${descripcion}&#13;
 ********************************************************************/&#13;
public static Resultado_BE crear(${tipo_parametro}_BE ${nombre_parametro}) {&#13;
	// Declaración de variables&#13;
	Connection conexion;&#13;
	Bitacora_BE bitacora;&#13;
	Resultado_BE app_resultado;&#13;
	Resultado_BE bitacora_resultado;&#13;
	Resultado_BE creacion_resultado;&#13;
&#13;
	// Inicialización de variables&#13;
	conexion = General_BLL.obtenerConexion();&#13;
	bitacora = new Bitacora_BE();&#13;
	app_resultado = new Resultado_BE();&#13;
	bitacora_resultado = new Resultado_BE();&#13;
	creacion_resultado = new Resultado_BE();&#13;
&#13;
	// Lógica de negocio&#13;
	try {&#13;
		// Aquí se completa toda la lógica de negocio&#13;
&#13;
		// Realizamos la creación&#13;
		creacion_resultado = ${tipo_parametro}_DAL.crear(${nombre_parametro}, conexion);&#13;
&#13;
		// Validamos la operación&#13;
		if (creacion_resultado.re_exitoso) {&#13;
			// Si la creación fue exitosa guardamos la bitácora&#13;
			bitacora.bi_descripcion = "AGREGAR DESCRIPCIÓN DE BITÁCORA";&#13;
			bitacora_resultado = Bitacora_DAL.crear(bitacora, conexion);&#13;
&#13;
			if (bitacora_resultado.re_exitoso) {&#13;
				// Operación exitosa&#13;
				app_resultado.re_exitoso = true;&#13;
				app_resultado.re_codigo = 1;&#13;
				app_resultado.re_identificador = creacion_resultado.re_identificador;&#13;
				app_resultado.re_descripcion = "OPERACION EXITOSA";&#13;
				conexion.commit();&#13;
			} else {&#13;
				// Error en inserción de bitácora&#13;
				app_resultado.re_exitoso = false;&#13;
				app_resultado.re_codigo = -1;&#13;
				app_resultado.re_descripcion = bitacora_resultado.re_descripcion;&#13;
				conexion.rollback();&#13;
			}&#13;
		} else {&#13;
			// Error en la creación&#13;
			app_resultado.re_exitoso = false;&#13;
			app_resultado.re_codigo = -2;&#13;
			app_resultado.re_descripcion = creacion_resultado.re_descripcion;&#13;
			conexion.rollback();&#13;
		}&#13;
	} catch (Exception e) {&#13;
		// Error no manejado&#13;
		app_resultado.re_exitoso = false;&#13;
		app_resultado.re_codigo = 0;&#13;
		app_resultado.re_descripcion = e.getMessage();&#13;
		try {&#13;
			conexion.rollback();&#13;
		} catch (SQLException e1) {&#13;
			//Error no manejado en la conexión&#13;
		}&#13;
	} finally {&#13;
		if (conexion != null) {&#13;
			try {&#13;
				conexion.close();&#13;
			} catch (SQLException e) {&#13;
				//Error no manejado en la conexión&#13;
			}&#13;
		}&#13;
	}&#13;
&#13;
	return app_resultado;&#13;
}</template><template autoinsert="true" context="java" deleted="false" description="BLL - Eliminar" enabled="true" name="blle">/*********************************************************************&#13;
 * @author ${nombre}&#13;
 * @since ${date}&#13;
 * @param ${tipo_parametro}_BE&#13;
 * @return Resultado_BE&#13;
 * @throws Exception&#13;
 * @Descripcion ${descripcion}&#13;
 ********************************************************************/&#13;
public static Resultado_BE eliminar(${tipo_parametro}_BE ${nombre_parametro}) {&#13;
	// Declaración de variables&#13;
	Connection conexion;&#13;
	Bitacora_BE bitacora;&#13;
	Resultado_BE app_resultado;&#13;
	Resultado_BE bitacora_resultado;&#13;
	Resultado_BE eliminacion_resultado;&#13;
&#13;
	// Inicialización de variables&#13;
	conexion = General_BLL.obtenerConexion();&#13;
	bitacora = new Bitacora_BE();&#13;
	app_resultado = new Resultado_BE();&#13;
	bitacora_resultado = new Resultado_BE();&#13;
	eliminacion_resultado = new Resultado_BE();&#13;
&#13;
	// Lógica de negocio&#13;
	try {&#13;
		// Aquí se completa toda la lógica de negocio&#13;
&#13;
		// Realizamos la eliminación&#13;
		eliminacion_resultado = ${tipo_parametro}_DAL.eliminar(${nombre_parametro}, conexion);&#13;
&#13;
		// Validamos la operación&#13;
		if (eliminacion_resultado.re_exitoso) {&#13;
			// Si la creación fue exitosa guardamos la bitácora&#13;
			bitacora.bi_descripcion = "AGREGAR DESCRIPCIÓN DE BITÁCORA";&#13;
			bitacora_resultado = Bitacora_DAL.crear(bitacora, conexion);&#13;
&#13;
			if (bitacora_resultado.re_exitoso) {&#13;
				// Operación exitosa&#13;
				app_resultado.re_exitoso = true;&#13;
				app_resultado.re_codigo = 1;&#13;
				app_resultado.re_filas_afectadas = eliminacion_resultado.re_filas_afectadas;&#13;
				app_resultado.re_descripcion = "OPERACION EXITOSA";&#13;
				conexion.commit();&#13;
			} else {&#13;
				// Error en inserción de bitácora&#13;
				app_resultado.re_exitoso = false;&#13;
				app_resultado.re_codigo = -1;&#13;
				app_resultado.re_descripcion = bitacora_resultado.re_descripcion;&#13;
				conexion.rollback();&#13;
			}&#13;
		} else {&#13;
			// Error en la creación&#13;
			app_resultado.re_exitoso = false;&#13;
			app_resultado.re_codigo = -2;&#13;
			app_resultado.re_descripcion = eliminacion_resultado.re_descripcion;&#13;
			conexion.rollback();&#13;
		}&#13;
	} catch (Exception e) {&#13;
		// Error no manejado&#13;
		app_resultado.re_exitoso = false;&#13;
		app_resultado.re_codigo = 0;&#13;
		app_resultado.re_descripcion = e.getMessage();&#13;
		try {&#13;
			conexion.rollback();&#13;
		} catch (SQLException e1) {&#13;
			//Error no manejado en la conexión&#13;
		}&#13;
	} finally {&#13;
		if (conexion != null) {&#13;
			try {&#13;
				conexion.close();&#13;
			} catch (SQLException e) {&#13;
				//Error no manejado en la conexión&#13;
			}&#13;
		}&#13;
	}&#13;
&#13;
	return app_resultado;&#13;
}</template><template autoinsert="true" context="java" deleted="false" description="BLL - Listar" enabled="true" name="blll">/*********************************************************************&#13;
 * @author ${nombre}&#13;
 * @since ${date}&#13;
 * @param ${tipo_parametro}_BE&#13;
 * @return List&lt;${tipo_parametro}_BE&gt;&#13;
 * @throws Exception&#13;
 * @Descripcion ${descripcion}&#13;
 ********************************************************************/&#13;
public static List&lt;${tipo_parametro}_BE&gt; listar(${tipo_parametro}_BE ${nombre_parametro}) {&#13;
	// Declaración de variables&#13;
	Connection conexion;&#13;
	List&lt;${tipo_parametro}_BE&gt; lista_resultado;&#13;
&#13;
	// Inicialización de variables&#13;
	conexion = General_BLL.obtenerConexion();&#13;
	lista_resultado = new ArrayList&lt;${nombre_parametro}_BE&gt;();&#13;
&#13;
	// Lógica de negocio&#13;
	try {&#13;
		// Aquí se validan los parámetros y se realiza la llamada a DAL&#13;
		lista_resultado = ${tipo_parametro}_DAL.listar(${nombre_parametro}, conexion);&#13;
		conexion.commit();&#13;
&#13;
	} catch (Exception e) {&#13;
		// Error no manejado&#13;
		lista_resultado = null;&#13;
		try {&#13;
			conexion.rollback();&#13;
		} catch (SQLException e1) {&#13;
			//Error no manejado en la conexión&#13;
		}&#13;
	} finally {&#13;
		if (conexion != null) {&#13;
			try {&#13;
				conexion.close();&#13;
			} catch (SQLException e) {&#13;
				//Error no manejado en la conexión&#13;
			}&#13;
		}&#13;
	}&#13;
&#13;
	return lista_resultado;&#13;
}</template><template autoinsert="true" context="java" deleted="false" description="BLL - Modificar" enabled="true" name="bllm">/*********************************************************************&#13;
 * @author ${nombre}&#13;
 * @since ${date}&#13;
 * @param ${tipo_parametro}_BE&#13;
 * @return Resultado_BE&#13;
 * @throws Exception&#13;
 * @Descripcion ${descripcion}&#13;
 ********************************************************************/&#13;
public static Resultado_BE modificar(${tipo_parametro}_BE ${nombre_parametro}) {&#13;
	// Declaración de variables&#13;
	Connection conexion;&#13;
	Bitacora_BE bitacora;&#13;
	Resultado_BE app_resultado;&#13;
	Resultado_BE bitacora_resultado;&#13;
	Resultado_BE modificacion_resultado;&#13;
&#13;
	// Inicialización de variables&#13;
	conexion = General_BLL.obtenerConexion();&#13;
	bitacora = new Bitacora_BE();&#13;
	app_resultado = new Resultado_BE();&#13;
	bitacora_resultado = new Resultado_BE();&#13;
	modificacion_resultado = new Resultado_BE();&#13;
&#13;
	// Lógica de negocio&#13;
	try {&#13;
		// Aquí se completa toda la lógica de negocio&#13;
&#13;
		// Realizamos la modificación&#13;
		modificacion_resultado = ${tipo_parametro}_DAL.modificar(${nombre_parametro}, conexion);&#13;
&#13;
		// Validamos la operación&#13;
		if (modificacion_resultado.re_exitoso) {&#13;
			// Si la modificación fue exitosa guardamos la bitácora&#13;
			bitacora.bi_descripcion = "AGREGAR DESCRIPCIÓN DE BITÁCORA";&#13;
			bitacora_resultado = Bitacora_DAL.crear(bitacora, conexion);&#13;
&#13;
			if (bitacora_resultado.re_exitoso) {&#13;
				// Operación exitosa&#13;
				app_resultado.re_exitoso = true;&#13;
				app_resultado.re_codigo = 1;&#13;
				app_resultado.re_filas_afectadas = modificacion_resultado.re_filas_afectadas;&#13;
				app_resultado.re_descripcion = "OPERACION EXITOSA";&#13;
				conexion.commit();&#13;
			} else {&#13;
				// Error en inserción de bitácora&#13;
				app_resultado.re_exitoso = false;&#13;
				app_resultado.re_codigo = -1;&#13;
				app_resultado.re_descripcion = bitacora_resultado.re_descripcion;&#13;
				conexion.rollback();&#13;
			}&#13;
		} else {&#13;
			// Error en la modificación&#13;
			app_resultado.re_exitoso = false;&#13;
			app_resultado.re_codigo = -2;&#13;
			app_resultado.re_descripcion = modificacion_resultado.re_descripcion;&#13;
			conexion.rollback();&#13;
		}&#13;
	} catch (Exception e) {&#13;
		// Error no manejado&#13;
		app_resultado.re_exitoso = false;&#13;
		app_resultado.re_codigo = 0;&#13;
		app_resultado.re_descripcion = e.getMessage();&#13;
		try {&#13;
			conexion.rollback();&#13;
		} catch (SQLException e1) {&#13;
			//Error no manejado en la conexión&#13;
		}&#13;
	} finally {&#13;
		if (conexion != null) {&#13;
			try {&#13;
				conexion.close();&#13;
			} catch (SQLException e) {&#13;
				//Error no manejado en la conexión&#13;
			}&#13;
		}&#13;
	}&#13;
&#13;
	return app_resultado;&#13;
}</template><template autoinsert="true" context="java" deleted="false" description="comclase" enabled="true" name="comclase">/*********************************************************************&#13;
 * @author ${nombre}&#13;
 * @version 1.0&#13;
 * @since ${date}&#13;
 * @FechaModificacion ${date}&#13;
 * @Descripcion ${descripcion}&#13;
 ********************************************************************/</template><template autoinsert="true" context="java" deleted="false" description="DAL - Crear" enabled="true" name="dalc">/*********************************************************************&#13;
 * @author ${nombre}&#13;
 * @since ${date}&#13;
 * @param ${tipo_parametro}&#13;
 * @param Connection&#13;
 * @return Resultado_BE&#13;
 * @throws SQLException&#13;
 * @throws Exception&#13;
 * @Descripcion ${descripcion}&#13;
 ********************************************************************/&#13;
public static Resultado_BE crear(${tipo_parametro} ${nombre_parametro}, Connection conexion)&#13;
		throws SQLException {&#13;
	// Declaración de variables&#13;
	Resultado_BE resultado;&#13;
	PreparedStatement pstmt;&#13;
	ResultSet rs;&#13;
&#13;
	// Inicialización de variables&#13;
	resultado = new Resultado_BE();&#13;
	pstmt = null;&#13;
	rs = null;&#13;
&#13;
	try {&#13;
		// Declaración de la función&#13;
		pstmt = conexion&#13;
				.prepareStatement("SELECT * FROM funcionInsertar(?,?);");&#13;
&#13;
		// Definición de los parámetros de la función&#13;
		//pstmt.setTipo(index, value);&#13;
&#13;
		// Ejecuta la función&#13;
		rs = pstmt.executeQuery();&#13;
&#13;
		while (rs.next()) {&#13;
			// Creación exitosa&#13;
			resultado.re_exitoso = true;&#13;
			resultado.re_identificador = rs.getInt("resultado");&#13;
		}&#13;
	} catch (SQLException e) {&#13;
		// Error no manejado&#13;
		resultado.re_exitoso = false;&#13;
		resultado.re_descripcion = e.getMessage();&#13;
	} catch (Exception e) {&#13;
		// Error no manejado&#13;
		resultado.re_exitoso = false;&#13;
		resultado.re_descripcion = e.getMessage();&#13;
	} finally {&#13;
		if (pstmt != null) {&#13;
			pstmt.close();&#13;
		}&#13;
		if (rs != null) {&#13;
			rs.close();&#13;
		}&#13;
	}&#13;
&#13;
	return resultado;&#13;
}</template><template autoinsert="true" context="java" deleted="false" description="DAL - Eliminar" enabled="true" name="dale">/*********************************************************************&#13;
 * @author ${nombre}&#13;
 * @since ${date}&#13;
 * @param ${tipo_parametro}&#13;
 * @param Connection&#13;
 * @return Resultado_BE&#13;
 * @throws SQLException&#13;
 * @throws Exception&#13;
 * @Descripcion ${descripcion}&#13;
 ********************************************************************/&#13;
public static Resultado_BE eliminar(${tipo_parametro} ${nombre_parametro}, Connection conexion)&#13;
		throws SQLException {&#13;
	// Declaración de variables&#13;
	Resultado_BE resultado;&#13;
	PreparedStatement pstmt;&#13;
	ResultSet rs;&#13;
&#13;
	// Inicialización de variables&#13;
	resultado = new Resultado_BE();&#13;
	pstmt = null;&#13;
	rs = null;&#13;
&#13;
	try {&#13;
		// Declaración de la función&#13;
		pstmt = conexion&#13;
				.prepareStatement("SELECT * FROM funcionEliminar(?,?);");&#13;
&#13;
		// Definición de los parámetros de la función&#13;
		//pstmt.setTipo(index, value);&#13;
&#13;
		// Ejecuta la función&#13;
		rs = pstmt.executeQuery();&#13;
&#13;
		while (rs.next()) {&#13;
			// Eliminación exitosa&#13;
			resultado.re_exitoso = true;&#13;
			resultado.re_filas_afectadas = rs.getInt("resultado");&#13;
		}&#13;
	} catch (SQLException e) {&#13;
		// Error no manejado&#13;
		resultado.re_exitoso = false;&#13;
		resultado.re_descripcion = e.getMessage();&#13;
	} catch (Exception e) {&#13;
		// Error no manejado&#13;
		resultado.re_exitoso = false;&#13;
		resultado.re_descripcion = e.getMessage();&#13;
	} finally {&#13;
		if (pstmt != null) {&#13;
			pstmt.close();&#13;
		}&#13;
		if (rs != null) {&#13;
			rs.close();&#13;
		}&#13;
	}&#13;
&#13;
	return resultado;&#13;
}</template><template autoinsert="true" context="java" deleted="false" description="DAL - Listar" enabled="true" name="dall">/*********************************************************************&#13;
 * @author ${nombre}&#13;
 * @since ${date}&#13;
 * @param ${tipo_parametro}&#13;
 * @param Connection&#13;
 * @return List&lt;${tipo_parametro}&gt;&#13;
 * @throws Exception&#13;
 * @Descripcion ${descripcion}&#13;
 ********************************************************************/&#13;
public static List&lt;${tipo_parametro}&gt; listar(${tipo_parametro} ${nombre_parametro}, Connection conexion)&#13;
		throws SQLException {&#13;
	// Declaración de variables&#13;
	List&lt;${tipo_parametro}&gt; lista_resultado;&#13;
	${tipo_parametro} temp;&#13;
	PreparedStatement pstmt;&#13;
	ResultSet rs;&#13;
&#13;
	// Inicialización de variables&#13;
	lista_resultado = new ArrayList&lt;${tipo_parametro}&gt;();&#13;
	pstmt = null;&#13;
	rs = null;&#13;
&#13;
	try {&#13;
		// Declaración de la función&#13;
		pstmt = conexion.prepareStatement("select * from funcionListar(?)");&#13;
&#13;
		// Definición de los parámetros de la función&#13;
		// pstmt.setString(posicion, valor); Según el tipo de dato&#13;
&#13;
		// Ejecuta la función&#13;
		rs = pstmt.executeQuery();&#13;
&#13;
		while (rs.next()) {&#13;
			// Inicializar la entidad temporal&#13;
			temp = new ${tipo_parametro}();&#13;
&#13;
			// Llenar entidad temporal con cada columna&#13;
			//temp.atributo = rs.getTipo("nombre_columna");&#13;
&#13;
			// Agregar a la lista&#13;
			lista_resultado.add(temp);&#13;
		}&#13;
	} catch (Exception e) {&#13;
		// Error no manejado&#13;
		lista_resultado = null;&#13;
	} finally {&#13;
		if (pstmt != null) {&#13;
			pstmt.close();&#13;
		}&#13;
		if (rs != null) {&#13;
			rs.close();&#13;
		}&#13;
	}&#13;
&#13;
	return lista_resultado;&#13;
}</template><template autoinsert="true" context="java" deleted="false" description="DAL - Modificar" enabled="true" name="dalm">/*********************************************************************&#13;
 * @author ${nombre}&#13;
 * @since ${date}&#13;
 * @param ${tipo_parametro}&#13;
 * @param Connection&#13;
 * @return Resultado_BE&#13;
 * @throws SQLException&#13;
 * @throws Exception&#13;
 * @Descripcion ${descripcion}&#13;
 ********************************************************************/&#13;
public static Resultado_BE modificar(${tipo_parametro} ${nombre_parametro}, Connection conexion)&#13;
		throws SQLException {&#13;
	// Declaración de variables&#13;
	Resultado_BE resultado;&#13;
	PreparedStatement pstmt;&#13;
	ResultSet rs;&#13;
&#13;
	// Inicialización de variables&#13;
	resultado = new Resultado_BE();&#13;
	pstmt = null;&#13;
	rs = null;&#13;
&#13;
	try {&#13;
		// Declaración de la función&#13;
		pstmt = conexion&#13;
				.prepareStatement("SELECT * FROM funcionModificar(?,?);");&#13;
&#13;
		// Definición de los parámetros de la función&#13;
		//pstmt.setTipo(index, value);&#13;
&#13;
		// Ejecuta la función&#13;
		rs = pstmt.executeQuery();&#13;
&#13;
		while (rs.next()) {&#13;
			// Modificación exitosa&#13;
			resultado.re_exitoso = true;&#13;
			resultado.re_filas_afectadas = rs.getInt("resultado");&#13;
		}&#13;
	} catch (SQLException e) {&#13;
		// Error no manejado&#13;
		resultado.re_exitoso = false;&#13;
		resultado.re_descripcion = e.getMessage();&#13;
	} catch (Exception e) {&#13;
		// Error no manejado&#13;
		resultado.re_exitoso = false;&#13;
		resultado.re_descripcion = e.getMessage();&#13;
	} finally {&#13;
		if (pstmt != null) {&#13;
			pstmt.close();&#13;
		}&#13;
		if (rs != null) {&#13;
			rs.close();&#13;
		}&#13;
	}&#13;
&#13;
	return resultado;&#13;
}</template></templates>